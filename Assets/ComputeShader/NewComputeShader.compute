// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#pragma target 5.0

struct Cube
{
    float3 position;
    float4 color;
};

float rand(float2 co)
{
    return (frac(sin(dot(co.xy, float2(12.9898, 78.233))) * 43758.5453)) * 1;
}


RWStructuredBuffer<Cube> cubes;
float resolution;
float repetitions;

[numthreads(10,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    
    for (int i = 0; i < repetitions; i++)
    {        
        float xPos = id.x / resolution;
        Cube cube = cubes[id.x];
    
    
        float yPos = rand(float2(xPos, cube.position.z));
        cube.position.y = yPos * 0.3f;
    
        float r = rand(xPos * float2(cube.color.r, cube.color.g));
        float g = rand(xPos * float2(cube.color.g, cube.color.b));
        float b = rand(xPos * float2(cube.color.b, cube.color.r));
        cube.color = float4(r, g, b, 1.0);
    
   
        cubes[id.x] = cube;
    }
}
